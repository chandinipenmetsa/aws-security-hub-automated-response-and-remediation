description: |
  ### Document Name - SHARR_Remediation_AFSBP_RDS.1
  ## What does this document do?
  This document chages public RDS snapshot to private

  ## Input Parameters
  * Finding: (Required) Security Hub finding details JSON
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
schemaVersion: '0.3'
assumeRole: '{{ AutomationAssumeRole }}'
outputs:
  - Remediation.Output
  - ParseInput.AffectedObject
parameters:
  Finding:
    type: StringMap
    description: The input from Step function for RDS.1 finding
  AutomationAssumeRole:
    type: String
    description: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.
    default: ''
mainSteps:
  - name: ParseInput
    action: 'aws:executeScript'
    outputs:
      - Name: DBSnapshotIdentifier
        Selector: $.Payload.db_snapshot_identifier
        Type: String
      - Name: FindingId
        Selector: $.Payload.finding_id
        Type: String
      - Name: ProductArn
        Selector: $.Payload.product_arn
        Type: String
      - Name: AffectedObject
        Selector: $.Payload.object
        Type: StringMap
      - Name: Type
        Selector: $.Payload.type
        Type: String
    inputs:
      InputPayload:
        Finding: '{{Finding}}'
      Runtime: python3.6
      Handler: parse_event
      Script: |-
        def parse_event(event, context):
          finding = event['Finding']
          finding_id = finding['Id']
          product_arn = finding['ProductArn']
          resource_type = finding['Resources'][0]['Type']
          object = {'Type': resource_type, 'OutputKey': 'Remediation.Output'}
          if (resource_type == 'AwsRdsDbSnapshot'):
            db_snapshot_identifier = finding['Resources'][0]['Details']['AwsRdsDbSnapshot']['DbSnapshotIdentifier']
          elif (resource_type == 'AwsRdsDbClusterSnapshot'):
            db_snapshot_identifier = finding['Resources'][0]['Id'].split(':')[-1]
          object['Id'] = db_snapshot_identifier
          return {"type": resource_type, "db_snapshot_identifier": db_snapshot_identifier, "finding_id": finding_id, "product_arn": product_arn, "object": object}
    nextStep: Remediation
  - name: Remediation
    action: 'aws:executeScript'
    outputs:
    - Name: Output
      Selector: $.Payload.response
      Type: StringMap
    inputs:
      InputPayload: 
        Type: '{{ParseInput.Type}}'
        DbSnapshotId: '{{ParseInput.DBSnapshotIdentifier}}'
      Runtime: python3.7
      Handler: make_snapshot_private
      Script: |-
        import boto3
        import json
        from botocore.exceptions import ClientError
        def make_snapshot_private(event, context):
          rds_client = boto3.client('rds')
          snapshot_id = event['DbSnapshotId']
          snapshot_type = event['Type']
          try:
            if (snapshot_type == 'AwsRdsDbSnapshot'):
              result = rds_client.modify_db_snapshot_attribute(
                DBSnapshotIdentifier=snapshot_id,
                AttributeName='restore',
                ValuesToRemove=['all']
              )
            elif (snapshot_type == 'AwsRdsDbClusterSnapshot'):
              result = rds_client.modify_db_cluster_snapshot_attribute(
                DBClusterSnapshotIdentifier=snapshot_id,
                AttributeName='restore',
                ValuesToRemove=['all']
              )
            return {
              "response": result
            }
          except Exception as e:
            log.info(e)
            exit(1)
    nextStep: UpdateFinding
  - name: UpdateFinding
    action: 'aws:executeAwsApi'
    inputs:
      Service: securityhub
      Api: BatchUpdateFindings
      FindingIdentifiers:
        - Id: '{{ParseInput.FindingId}}'
          ProductArn: '{{ParseInput.ProductArn}}'
      Note:
        Text: RDS DB Snapshot modified to private
        UpdatedBy: SHARR_Remediation_AFSBP_RDS.1
    description: Update finding
    isEnd: true